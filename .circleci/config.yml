version: 2

defaults: &defaults
  docker:
    - image: gcr.io/planet-4-151612/p4-builder:latest

job_environments:
  common_environment: &common_environment
    APP_HOSTPATH: hongkong
    CONTAINER_PREFIX: planet4-hongkong
  develop_environment: &develop_environment
    APP_ENVIRONMENT: development
    APP_HOSTNAME: k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: p4-develop-k8s
    GOOGLE_PROJECT_ID: planet-4-151612
    GCLOUD_CLUSTER: p4-development
    HELM_NAMESPACE: develop
    HELM_RELEASE: planet4-hongkong
    NEWRELIC_APPNAME: P4 Hong Kong Development
    WP_DB_NAME: planet4-hongkong_wordpress_develop
    WP_STATELESS_BUCKET: planet4-hongkong-stateless-develop
  release_environment: &release_environment
    APP_ENVIRONMENT: staging
    APP_HOSTNAME: release.k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: planet4-prod
    GCLOUD_CLUSTER: planet4-production
    GOOGLE_PROJECT_ID: planet4-production
    HELM_NAMESPACE: hongkong
    HELM_RELEASE: planet4-hongkong-release
    NEWRELIC_APPNAME: P4 Hong Kong Release
    WP_DB_NAME: planet4-hongkong_wordpress_release
    WP_STATELESS_BUCKET: planet4-hongkong-stateless-release
  production_environment: &production_environment
    APP_HOSTNAME: master.k8s.p4.greenpeace.org
    CLOUDSQL_INSTANCE: planet4-prod
    GCLOUD_CLUSTER: planet4-production
    GOOGLE_PROJECT_ID: planet4-production
    HELM_NAMESPACE: hongkong
    HELM_RELEASE: planet4-hongkong-master
    MIN_REPLICA_COUNT: 2
    NEWRELIC_APPNAME: P4 Hong Kong Production
    WP_DB_NAME: planet4-hongkong_wordpress_master
    WP_STATELESS_BUCKET: planet4-hongkong-stateless

job_definitions:
  build_steps: &build_steps
    working_directory: ~/
    steps:
      - setup_remote_docker
      - restore_cache:
          keys:
            - composer-v1-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
            - composer-v1-{{ .Branch }}-{{ .Revision }}
            - composer-v1-{{ .Branch }}
            - composer-v1
      - run: |
          if [[ -d source/cache ]]; then ls -al source/cache; fi
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var
      - run: mkdir -p /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num

      - run: make
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Build" notify-job-failure.sh
      - save_cache:
          key: composer-v1-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
          paths:
            - source/cache
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  prepare_release: &prepare_release
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: release-prepare-nro.sh
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Prepare" notify-job-failure.sh
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  notify_promote: &notify_promote
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: notify
          command: |
            TYPE="@rawalker Promote release/$(increment-version.sh "$(git-current-tag.sh)")" \
            EXTRA_TEXT="Verify: https://$APP_HOSTNAME/$APP_HOSTPATH" \
            notify-job-hold.sh

  notify_hold: &notify_hold
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: notify
          command: |
            TYPE="@rawalker Hold: ${CIRCLE_TAG}" \
            EXTRA_TEXT="Verify: https://$APP_HOSTNAME/$APP_HOSTPATH" \
            notify-job-hold.sh

  finish_release: &finish_release
    working_directory: /tmp/workspace/src
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run: increment-version.sh "$(git-current-tag.sh)" | tee /tmp/workspace/var/new_release
      - run: release-finish.sh
      - run: git push origin --delete release/$(cat /tmp/workspace/var/new_release)
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Promote" notify-job-failure.sh

  deploy_steps: &deploy_steps
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - run: BUILD_TAG=build-$(cat /tmp/workspace/var/circle-build-num) make -j2 deploy

jobs:
  build-branch:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *build_steps

  prepare-release:
    <<: *defaults
    <<: *prepare_release

  notify-promote:
    <<: *defaults
    <<: *notify_promote
    environment:
      <<: *common_environment
      <<: *release_environment

  build-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *build_steps

  finish-release:
    <<: *defaults
    <<: *finish_release

  build-tag:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *build_steps

  notify-hold:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *notify_hold

  deploy-develop:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *deploy_steps

  deploy-release:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *release_environment
    <<: *deploy_steps

  deploy-tag:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *production_environment
    <<: *deploy_steps


  create-sync-sql:
    <<: *defaults
    environment:
       <<: *common_environment
       <<: *production_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_create_sync_file.sh


  sync-sql-to-release:
    <<: *defaults
    environment:
       <<: *common_environment
       <<: *release_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_to_sync_site.sh release

  sync-sql-to-develop:
    <<: *defaults
    environment:
       <<: *common_environment
       <<: *develop_environment
    working_directory: /tmp/workspace/src
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: /home/circleci/sql_to_sync_site.sh develop

workflow_definitions:
  develop_common: &develop_common
    context: org-global
    filters:
      branches:
        only: develop
  release_common: &release_common
    context: org-global
    filters:
      branches:
        only: /^release.*/
  tag_common: &tag_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\p{Digit}+\.\p{Digit}+\.\p{Digit}+.*/
  sync_common: &sync_common
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /sync.*/

workflows:
  version: 2
  develop:
    jobs:
    - build-branch:
        <<: *develop_common
    - deploy-develop:
        <<: *develop_common
        requires:
          - build-branch
    - prepare-release:
        <<: *develop_common
        requires:
          - deploy-develop

  release:
    jobs:
    - build-release:
        <<: *release_common
    - deploy-release:
        <<: *release_common
        requires:
          - build-release
    - notify-promote:
        <<: *release_common
        requires:
          - deploy-release
    - hold-promote:
        <<: *release_common
        type: approval
        requires:
          - deploy-release
    - finish-release:
        <<: *release_common
        requires:
          - hold-promote
          - notify-promote
  tag:
    jobs:
    - build-tag:
        <<: *tag_common
    - deploy-tag:
        <<: *tag_common
        requires:
          - build-tag

  create-sync-sql:
    jobs:
    - create-sync-sql:
        <<: *sync_common
    - sync-sql-to-release:
        <<: *sync_common
        requires:
          - create-sync-sql
    - sync-sql-to-develop:
        <<: *sync_common
        requires:
          - sync-sql-to-release
